#include "services_microboone.fcl"
#include "genie_microboone.fcl"
#include "largeantmodules_microboone.fcl"
#include "mcreco.fcl"
#include "detsimmodules_microboone.fcl"
#include "triggersim_microboone.fcl"
#include "opticaldetectorsim_microboone.fcl"
#include "opticaldetectormodules_microboone.fcl"
#include "correct_saturation.fcl"
#include "photpropservices_microboone.fcl"
#include "correct_saturation.fcl"
#include "caldata_microboone.fcl" 
#include "time_memory_tracker_microboone.fcl"
#include "swtrigger_microboone.fcl"
#include "ubflashfinder.fcl"
#include "hitfindermodules_microboone.fcl"
#include "litemc_mcinfo.fcl"
#include "litemc_simch.fcl"
#include "litemc_wire.fcl"
#include "litemc_reco2d.fcl"
#include "litemc_opreco.fcl"
#include "litemc_opdigit.fcl"

process_name: MCC2LL

services:
{
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "mc_hist.root" }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  RandomNumberGenerator:   {} #ART native random number generator                                                            message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
  LLMetaMaker: {Enable: true}
  @table::microboone_simulation_services
}

services.Geometry.ForceUseFCLOnly: true
services.UBOpReadoutMap:  @local::microboone_opreadoutmap_mc
services.FileCatalogMetadata.applicationVersion: "develop"
services.FileCatalogMetadata.fileType: "mc"
services.FileCatalogMetadata.runType: "physics"
services.FileCatalogMetadataMicroBooNE: {
  FCLName: "run_larlite_maker_mc.fcl"
  FCLVersion: "develop"
  ProjectName: "LiteMC"
  ProjectStage: "LiteMaker"
  ProjectVersion: "develop"
}

services.DetectorClocksService.TriggerOffsetTPC: -0.4e3
services.DetectorClocksService.InheritClockConfig: false

services.TimeTracker.printSummary: false
services.TimeTracker.dbOutput: {}

services.MemoryTracker.printSummaries: []
services.MemoryTracker.includeMallocInfo: false
services.MemoryTracker.filename: ""

services.UBOpticalChConfig.DarkRate: [ 0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0, # channels 0-35
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0, # logic channels 36-47
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0, # channels 100-135
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0, # logic channels 136-147
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0, # channels 200-236
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0,
                                       0, 0, 0, 0, 0, 0] # 300-335

source:
{
  module_type: RootInput
}


physics:
{

 producers:
 {
 }

 analyzers:
 {
   mcinfo:  @local::litemc_mcinfo
   opdigit: @local::litemc_opdigit
   opreco:  @local::litemc_opreco
 }

 filters: { swtrigger: @local::microboone_swtrigger_mc_bnb }

 simulate: []

 ana: [ mcinfo, opdigit, opreco]
 
 #stream1:  [ out1 ]
 stream1:  []

 #trigger_paths: [simulate] 
 trigger_paths: []

 end_paths:     [stream1,ana]  
}

#physics.producers.triggersim.ExtTrigger: [-343.75]
#physics.producers.triggersim.DebugMode: false

#physics.analyzers.mcinfo.SelectEvents: { SelectEvents: [ simulate ] }
#physics.analyzers.opdigit.SelectEvents: { SelectEvents: [ simulate ] }
#physics.analyzers.opreco.SelectEvents: { SelectEvents: [ simulate ] }

physics.analyzers.mcinfo.stream:      "mcinfo"
physics.analyzers.opdigit.stream:     "opdigit"
physics.analyzers.opreco.stream:      "opreco"

physics.analyzers.mcinfo.out_filename:      "larlite_mcinfo.root"
physics.analyzers.opdigit.out_filename:     "larlite_opdigit.root"
physics.analyzers.opreco.out_filename:      "larlite_opreco.root"

physics.analyzers.opreco.DataLookUpMap.ophit: ["ophit","ophitSatBeam","ophitSatCosmic"]
physics.analyzers.opreco.DataLookUpMap.opflash: ["simpleFlashCosmic","simpleFlashBeam"]

physics.analyzers.opreco.AssociationLookUpMap.ophit: ["ophit","ophitSatBeam","ophitSatCosmic"]
physics.analyzers.opreco.AssociationLookUpMap.opflash: ["simpleFlashCosmic","simpleFlashBeam"]

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "genie_gen.root" #default file name, can override from command line with -o or --output
   dataTier:    "generated"
   compressionLevel: 1
 }
}

